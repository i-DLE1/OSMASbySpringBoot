<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idle.osmas.admin.dao.SellerApprovalFormMapper">

    <resultMap id="permissionRoleResultMap" type="com.idle.osmas.admin.dto.PermissionRoleDTO">
        <id property="no" column="NO"/>
        <result property="rejectReason" column="REJECT_REASON"/>
        <result property="permissionStatus" column="PERMISSION_STATUS"/>
        <result property="lastDate" column="LAST_DATE"/>
        <result property="sellerReason" column="SELLER_REASON"/>
        <result property="otherReason" column="OTHER_REASON"/>

        <association property="sellerRoleReq" resultMap="sellerRoleReqResultMap"/>
    </resultMap>

    <resultMap id="sellerRoleReqResultMap" type="com.idle.osmas.admin.dto.SellerRoleReqDTO">
        <id property="no" column="NO"/>
        <result property="date" column="REGIST_DATE"/>

        <association property="memberNo" resultMap="sellerRoleResultMap"/>
    </resultMap>

    <resultMap id="sellerRoleResultMap" type="com.idle.osmas.admin.dto.SellerRoleDTO">
        <id property="memberNo" column="REF_MEMBER_NO"/>
        <result property="accountNo" column="ACCOUNT_NO"/>
        <result property="registNo" column="REGIST_NO"/>
        <result property="name" column="NAME"/>
        <result property="callNumber" column="CALL_NUMBER"/>
        <result property="rprsn" column="RPRSN"/>
        <result property="address" column="ADDRESS"/>
        <result property="bank" column="BANK"/>
        <result property="reportNo" column="REPORT_NO"/>

        <association property="member" resultMap="memberResultMap"/>
        <association property="reason" resultMap="permissionRoleResultMap"/>
        <collection property="fileList" resultMap="sellerRoleFileResultMap"/>
    </resultMap>

    <resultMap id="sellerRoleFileResultMap" type="com.idle.osmas.admin.dto.SellerRoleFileDTO">
        <id property="no" column="NO"/>
        <result property="idCode" column="ID_CODE"/>
        <result property="originName" column="ORIGIN_NAME"/>
        <result property="changeName" column="CHANGE_NAME"/>
        <result property="deteleYN" column="DETELE_YN"/>

        <association property="memberNo" resultMap="memberResultMap"/>
    </resultMap>

    <resultMap id="memberResultMap" type="com.idle.osmas.member.dto.MemberDTO">
        <id property="no" column="NO"/>
        <result property="id" column="ID"/>
        <result property="pwd" column="PWD"/>
        <result property="name" column="NAME"/>
        <result property="phone" column="PHONE"/>
        <result property="birth" column="BIRTH"/>
        <result property="email" column="EMAIL"/>
        <result property="registDate" column="REGIST_DATE"/>
        <result property="nickname" column="NICKNAME"/>
        <result property="status" column="STATUS"/>
        <result property="introduction" column="INTRODUCTION"/>
        <result property="dropReason" column="DROP_REASON"/>
    </resultMap>

    <!-- 판매자 권한 신청 정보 보기 -->
    <select id="getFormConfirmation" resultMap="sellerRoleResultMap">
        SELECT
            M.ID,
            S.BANK,
            S.ACCOUNT_NO,
            S.NAME,
            S.RPRSN,
            S.CALL_NUMBER,
            S.ADDRESS,
            S.REGIST_NO,
            S.REPORT_NO,
            S.REF_MEMBER_NO,
            P.REJECT_REASON
        FROM
            TBL_SELLER_ROLE S
                JOIN TBL_MEMBER M ON S.REF_MEMBER_NO = M.NO
                JOIN TBL_SELLER_ROLE_REQ Q ON Q.REF_MEMBER_NO = M.NO
                JOIN TBL_PERMISSION_ROLE P ON P.REF_SELLER_ROLE_REQ_NO = Q.NO
                JOIN TBL_ROLE_LIST R ON M.NO = R.REF_MEMBER_NO
        WHERE
            R.REF_MEMBER_ROLE_CODE = 1
          AND R.REF_MEMBER_ROLE_CODE NOT IN (2, 3)
          AND NOT EXISTS (
            SELECT 1
            FROM TBL_ROLE_LIST
            WHERE REF_MEMBER_NO = M.NO
              AND REF_MEMBER_ROLE_CODE = 2
        )
          AND Q.NO = (
            SELECT MAX(NO)
            FROM TBL_SELLER_ROLE_REQ
            WHERE REF_MEMBER_NO = M.NO
        )
          AND M.ID = #{userId}
    </select>

    <!-- 판매자 권한 다시 신청 정보 불러오기 -->
    <select id="getFormAgain" resultMap="sellerRoleResultMap">
        SELECT
            M.ID,
            S.BANK,
            S.ACCOUNT_NO,
            S.NAME,
            S.RPRSN,
            S.CALL_NUMBER,
            S.ADDRESS,
            S.REGIST_NO,
            S.REPORT_NO,
            S.REF_MEMBER_NO,
            P.REJECT_REASON
        FROM
            TBL_SELLER_ROLE S
                JOIN TBL_MEMBER M ON S.REF_MEMBER_NO = M.NO
                JOIN TBL_SELLER_ROLE_REQ Q ON Q.REF_MEMBER_NO = M.NO
                JOIN TBL_PERMISSION_ROLE P ON P.REF_SELLER_ROLE_REQ_NO = Q.NO
                JOIN TBL_ROLE_LIST R ON M.NO = R.REF_MEMBER_NO
        WHERE
            R.REF_MEMBER_ROLE_CODE = 1
          AND R.REF_MEMBER_ROLE_CODE NOT IN (2, 3)
          AND NOT EXISTS (
            SELECT 1
            FROM TBL_ROLE_LIST
            WHERE REF_MEMBER_NO = M.NO
              AND REF_MEMBER_ROLE_CODE = 2
        )
          AND P.PERMISSION_STATUS = 'REJECTED'
          AND Q.NO = (
            SELECT MAX(NO)
            FROM TBL_SELLER_ROLE_REQ
            WHERE REF_MEMBER_NO = M.NO
        )
          AND M.ID = #{userId}
    </select>

    <!-- 판매자 권한 보류 다시 신청 사유값 불러오기 -->
    <select id="findReason" resultMap="permissionRoleResultMap">
        SELECT
        P.REJECT_REASON
FROM
    TBL_PERMISSION_ROLE P
        JOIN TBL_HOLDING_ALERT H ON H.REF_PERMISSION_ROLE_NO = P.NO
        JOIN TBL_SELLER_ROLE_REQ Q ON Q.NO = P.REF_SELLER_ROLE_REQ_NO
        JOIN TBL_MEMBER M ON Q.REF_MEMBER_NO = M.NO
        JOIN TBL_ROLE_LIST R ON M.NO = R.REF_MEMBER_NO
WHERE
        R.REF_MEMBER_ROLE_CODE = 1
  AND EXISTS (
    SELECT 1
    FROM TBL_ROLE_LIST
    WHERE REF_MEMBER_NO = M.NO AND REF_MEMBER_ROLE_CODE = 2
)
  AND NOT EXISTS (
    SELECT 1
    FROM TBL_ROLE_LIST
    WHERE REF_MEMBER_NO = M.NO AND REF_MEMBER_ROLE_CODE = 3
)
  AND P.REJECT_REASON IS NOT NULL
  AND P.PERMISSION_STATUS = 'REJECTED'
  AND M.ID = #{userId}
ORDER BY H.REGIST_DATE DESC
    FETCH FIRST 1 ROW ONLY
    </select>

    <!-- 판매자 권한 회수 신청 정보 불러오기 -->
    <select id="sellerReason" resultMap="permissionRoleResultMap">
        SELECT
            P.SELLER_REASON,
            P.OTHER_REASON
        FROM
            TBL_PERMISSION_ROLE P
                JOIN TBL_SELLER_ROLE_REQ Q ON Q.NO = P.REF_SELLER_ROLE_REQ_NO
                JOIN TBL_MEMBER M ON Q.REF_MEMBER_NO = M.NO
        WHERE  M.ID = #{userId}
          AND P.LAST_DATE = (
            SELECT MAX(LAST_DATE)
            FROM TBL_PERMISSION_ROLE
            WHERE PERMISSION_STATUS = 'SCREENING')

    </select>

    <!-- 권한 회수 신청 -->
    <insert id="sellerOutReq" parameterType="java.lang.String">
        INSERT INTO TBL_SELLER_ROLE_REQ (NO, REF_MEMBER_NO, REGIST_DATE)
        VALUES (SEQ_TBL_SELLER_ROLE_REQ_NO.NEXTVAL,
                (SELECT M.NO FROM TBL_MEMBER M WHERE ID = #{sellerId}),
                SYSDATE
               )
    </insert>

    <!-- 권한 회수 신청 -->
    <insert id="sellerOut" parameterType="java.util.Map">
        INSERT INTO TBL_PERMISSION_ROLE (NO,SELLER_REASON, PERMISSION_STATUS, LAST_DATE, REF_SELLER_ROLE_REQ_NO, OTHER_REASON)
        VALUES (
                   SEQ_TBL_PERMISSION_ROLE_NO.NEXTVAL,
                   #{reasonSelect},
                   'SCREENING',
                   SYSDATE,
                   (SELECT Q.NO
                    FROM TBL_SELLER_ROLE_REQ Q
                             JOIN TBL_MEMBER M ON Q.REF_MEMBER_NO = M.NO
                    WHERE M.ID = #{sellerId}
                    ORDER BY Q.REGIST_DATE DESC
                        FETCH FIRST 1 ROW ONLY),
                   #{otherReasonInput}
               )
    </insert>

    <!-- 권한 회수 신청 취소 -->
    <delete id="deletePERMISSION">
        DELETE FROM TBL_PERMISSION_ROLE
        WHERE REF_SELLER_ROLE_REQ_NO IN (
            SELECT Q.NO
            FROM TBL_SELLER_ROLE_REQ Q
                     JOIN TBL_MEMBER M ON Q.REF_MEMBER_NO = M.NO
            WHERE M.ID = #{sellerId}
        )
    </delete>

    <!-- 권한 회수 신청 취소 -->
    <delete id="deleteREQ">
        DELETE FROM TBL_SELLER_ROLE_REQ
        WHERE REF_MEMBER_NO = (
        SELECT M.NO
        FROM TBL_MEMBER M
            JOIN TBL_SELLER_ROLE_REQ Q ON Q.REF_MEMBER_NO = M.NO
        WHERE ID = #{sellerId}
        ORDER BY Q.REGIST_DATE DESC
            FETCH FIRST 1 ROW ONLY
        )
    </delete>

    <!-- 권한 신청 insert-->
    <insert id="sellerInsert" parameterType="java.lang.String">
        INSERT INTO TBL_SELLER_ROLE (ACCOUNT_NO,REGIST_NO, NAME, CALL_NUMBER, RPRSN, ADDRESS, REF_MEMBER_NO, BANK, REPORT_NO)
        VALUES (
                   #{accountNo},
                   #{registNo},
                   #{name},
                   #{callNumber},
                   #{rprsn},
                   #{address},
                   (SELECT M.NO
                    FROM TBL_MEMBER M
                    WHERE M.ID = #{sellerId}
                   ),
                   #{bank},
                   #{reportNo}
               )
    </insert>

    <insert id="sellerInsertReq" parameterType="java.lang.String">
        INSERT INTO TBL_SELLER_ROLE_REQ (NO,REF_MEMBER_NO, REGIST_DATE)
        VALUES (
                   SEQ_TBL_SELLER_ROLE_REQ_NO.NEXTVAL,
                   (SELECT M.NO
                    FROM TBL_MEMBER M
                    WHERE M.ID = #{sellerId}
                   ),
                   SYSDATE
               )
    </insert>

    <insert id="sellerInsertPermission" parameterType="java.lang.String">
        INSERT INTO TBL_PERMISSION_ROLE (NO, PERMISSION_STATUS, LAST_DATE, REF_SELLER_ROLE_REQ_NO)
        VALUES (
                   SEQ_TBL_PERMISSION_ROLE_NO.NEXTVAL,
                   'SCREENING',
                   SYSDATE,
                   (
                       SELECT Q.NO
                       FROM TBL_SELLER_ROLE_REQ Q
                                JOIN TBL_MEMBER M ON Q.REF_MEMBER_NO = M.NO
                       WHERE M.ID = #{sellerId}
                         AND Q.REGIST_DATE = (
                           SELECT MAX(REGIST_DATE)
                           FROM TBL_SELLER_ROLE_REQ
                           WHERE REF_MEMBER_NO = Q.REF_MEMBER_NO
                       )
                   )
               )
    </insert>

    <!-- 권한 신청 파일 insert-->
    <insert id="sellerInsertFileList" parameterType="java.util.List">
        INSERT INTO TBL_SELLER_ROLE_FILE (NO, ID_CODE, ORIGIN_NAME, CHANGE_NAME, DETELE_YN, REF_MEMBER_NO)
        SELECT
        SEQ_TBL_SELLER_ROLE_FILE_NO.NEXTVAL,
        idCode,
        originFileName,
        savedFileName,
        'N',
        (SELECT M.NO
        FROM TBL_MEMBER M
        WHERE M.ID = #{sellerId})
        FROM (
        <foreach collection="fileList" item="file" separator="UNION ALL">
            SELECT
            #{file.fileType} AS idCode,  -- Enum 값을 사용하여 파일 유형 지정
            #{file.originFileName} AS originFileName,
            #{file.savedFileName} AS savedFileName
            FROM DUAL
        </foreach>
        )
    </insert>

    <!-- 권한 신청 후 다시 제출 -->
    <update id="sellerUpdate" parameterType="java.lang.String">
        UPDATE TBL_SELLER_ROLE
        SET ACCOUNT_NO = #{accountNo},
            REGIST_NO = #{registNo},
            NAME = #{name},
            CALL_NUMBER = #{callNumber},
            RPRSN = #{rprsn},
            ADDRESS = #{address},
            BANK = #{bank},
            REPORT_NO = #{reportNo}
        WHERE REF_MEMBER_NO = (SELECT M.NO
                               FROM TBL_MEMBER M
                               WHERE M.ID = #{sellerId})
    </update>

    <insert id="sellerInserUpdateReq" parameterType="java.lang.String">
        INSERT INTO TBL_SELLER_ROLE_REQ (NO,REF_MEMBER_NO, REGIST_DATE)
        VALUES (
                   SEQ_TBL_SELLER_ROLE_REQ_NO.NEXTVAL,
                   (SELECT M.NO
                    FROM TBL_MEMBER M
                    WHERE M.ID = #{sellerId}
                   ),
                   SYSDATE
               )
    </insert>

    <insert id="sellerInsertUpdatePermission" parameterType="java.lang.String">
        INSERT INTO TBL_PERMISSION_ROLE (NO, PERMISSION_STATUS, LAST_DATE, REF_SELLER_ROLE_REQ_NO)
        VALUES (
                   SEQ_TBL_PERMISSION_ROLE_NO.NEXTVAL,
                   'SCREENING',
                   SYSDATE,
                   (SELECT Q.NO
                    FROM TBL_SELLER_ROLE_REQ Q
                             JOIN TBL_MEMBER M ON Q.REF_MEMBER_NO = M.NO
                    WHERE M.ID = #{sellerId}
                      AND Q.REGIST_DATE = (
                        SELECT MAX(REGIST_DATE)
                        FROM TBL_SELLER_ROLE_REQ
                        WHERE REF_MEMBER_NO = M.NO
                    ))
               )
    </insert>

    <insert id="sellerUpdateFileList" parameterType="java.util.List">
        INSERT INTO TBL_SELLER_ROLE_FILE (NO, ID_CODE, ORIGIN_NAME, CHANGE_NAME, DETELE_YN, REF_MEMBER_NO)
        SELECT
        SEQ_TBL_SELLER_ROLE_FILE_NO.NEXTVAL,
        idCode,
        originFileName,
        savedFileName,
        'N',
        (SELECT M.NO
        FROM TBL_MEMBER M
        WHERE M.ID = #{sellerId})
        FROM (
        <foreach collection="fileList" item="file" separator="UNION ALL">
            SELECT
            #{file.fileType} AS idCode,  -- Enum 값을 사용하여 파일 유형 지정
            #{file.originFileName} AS originFileName,
            #{file.savedFileName} AS savedFileName
            FROM DUAL
        </foreach>
        )
    </insert>

    <!-- 권한 신청 취소 -->
    <delete id="deleteRole">
        DELETE FROM TBL_SELLER_ROLE
        WHERE REF_MEMBER_NO = (
            SELECT M.NO
            FROM TBL_MEMBER M
            WHERE ID = #{sellerId}
        )
    </delete>

    <!-- 권한 신청 취소 -->
    <delete id="deleteFile">
        DELETE FROM TBL_SELLER_ROLE_FILE
        WHERE REF_MEMBER_NO = (
            SELECT M.NO
            FROM TBL_MEMBER M
            WHERE ID = #{sellerId}
        )
    </delete>

    <!-- 판매자 권한 신청 이력 확인-->
    <select id="checkgetFormHistory">
        SELECT
            *
        FROM TBL_SELLER_ROLE
        WHERE REF_MEMBER_NO = (
            SELECT NO
            FROM TBL_MEMBER
                WHERE ID = #{userID}
            )
    </select>

    <!-- 판매자 권한 신청 회수 이력 확인 -->
    <select id="checkoutFormHistory">
        SELECT
            NO
        FROM TBL_PERMISSION_ROLE
        WHERE PERMISSION_STATUS = 'SCREENING'
          AND REF_SELLER_ROLE_REQ_NO IN
            (SELECT Q.NO
            FROM TBL_SELLER_ROLE_REQ Q
            JOIN TBL_MEMBER M ON Q.REF_MEMBER_NO = M.NO
            WHERE M.ID = #{userID}
            ORDER BY Q.REGIST_DATE DESC
            FETCH FIRST 1 ROW ONLY)
    </select>
</mapper>